(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{336:function(t,s,a){"use strict";a.r(s);var e=a(4),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"压缩代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩代码"}},[t._v("#")]),t._v(" 压缩代码")]),t._v(" "),s("blockquote",[s("p",[t._v("浏览器从服务器访问网页时获取的 JavaScript、CSS 资源都是文本形式的，文件越大网页加载时间越长。")]),t._v(" "),s("p",[t._v("为了提升网页加速速度和减少网络传输流量，可以对这些资源进行压缩。")]),t._v(" "),s("p",[t._v("压缩的方法除了可以通过 GZIP 算法对文件压缩外，还可以对文本本身进行压缩")])]),t._v(" "),s("h2",{attrs:{id:"压缩-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩-javascript"}},[t._v("#")]),t._v(" 压缩 JavaScript")]),t._v(" "),s("blockquote",[s("p",[t._v("目前最成熟的js压缩工具是UglifyJS")])]),t._v(" "),s("h3",{attrs:{id:"uglifyjs配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uglifyjs配置"}},[t._v("#")]),t._v(" UglifyJs配置")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("sourceMap")]),t._v("：是否为压缩后的代码生成对应的 Source Map，默认为不生成，开启后耗时会大大增加。一般不会把压缩后的代码的 Source Map 发送给网站用户的浏览器，而是用于内部开发人员调试线上代码时使用。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("beautify")]),t._v("： 是否输出可读性较强的代码，即会保留空格和制表符，默认为是，为了达到更好的压缩效果，可以设置为 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("comments")]),t._v("：是否保留代码中的注释，默认为保留，为了达到更好的压缩效果，可以设置为 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("compress.warnings")]),t._v("：是否在 UglifyJs 删除没有用到的代码时输出警告信息，默认为输出，可以设置为 "),s("code",[t._v("false")]),t._v(" 以关闭这些作用不大的警告。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("drop_console")]),t._v("：是否剔除代码中所有的 "),s("code",[t._v("console")]),t._v(" 语句，默认为不剔除。开启后不仅可以提升代码压缩效果，也可以兼容不支持 "),s("code",[t._v("console")]),t._v(" 语句 IE 浏览器。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("collapse_vars")]),t._v("：是否内嵌定义了但是只用到一次的变量，例如把 "),s("code",[t._v("var x = 5; y = x")]),t._v(" 转换成 "),s("code",[t._v("y = 5")]),t._v("，默认为不转换。为了达到更好的压缩效果，可以设置为 "),s("code",[t._v("true")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("reduce_vars")]),t._v("： 是否提取出出现多次但是没有定义成变量去引用的静态值，例如把 "),s("code",[t._v("x = 'Hello'; y = 'Hello'")]),t._v(" 转换成 "),s("code",[t._v("var a = 'Hello'; x = a; y = b")]),t._v("，默认为不转换。为了达到更好的压缩效果，可以设置为 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("p",[t._v("也就是说，在不影响代码正确执行的前提下，最优化的代码压缩配置为如下")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UglifyJsPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("compress")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在uglifyJS删除无用的代码时不输出警告")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("warning")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去取console.log")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("drop_console")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取出现多次，但是没有定义成变量的静态值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("reduce_vars")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内嵌定义了只用到了一次的变量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("collapse_vars")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 紧凑输出")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("beautify")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去除注释")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("comments")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"压缩es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩es6"}},[t._v("#")]),t._v(" 压缩ES6")]),t._v(" "),s("p",[t._v("运行 ES6 的代码相比于转换后的 ES5 代码有如下优点：")]),t._v(" "),s("ul",[s("li",[t._v("一样的逻辑用 ES6 实现的代码量比 ES5 更少。")]),t._v(" "),s("li",[t._v("JavaScript 引擎对 ES6 中的语法做了性能优化，例如针对 "),s("code",[t._v("const")]),t._v(" 申明的变量有更快的读取速度")])])])}),[],!1,null,null,null);s.default=r.exports}}]);