(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{355:function(v,_,e){"use strict";e.r(_);var t=e(4),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"esbuild-为什么这么快"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#esbuild-为什么这么快"}},[v._v("#")]),v._v(" esbuild 为什么这么快?")]),v._v(" "),_("h1",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[_("code",[v._v("esbuild")]),v._v(" 是新一代的 JavaScript 打包工具。")]),v._v(" "),_("p",[_("code",[v._v("esbuild")]),v._v("以"),_("code",[v._v("速度快")]),v._v("而著称，耗时只有 webpack 的 2% ～3%。")]),v._v(" "),_("p",[_("code",[v._v("esbuild")]),v._v(" 项目主要目标是: "),_("code",[v._v("开辟一个构建工具性能的新时代，创建一个易用的现代打包器")]),v._v("。")]),v._v(" "),_("p",[v._v("它的主要功能：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Extreme speed without needing a cache")])]),v._v(" "),_("li",[_("code",[v._v("ES6 and CommonJS modules")])]),v._v(" "),_("li",[_("code",[v._v("Tree shaking of ES6 modules")])]),v._v(" "),_("li",[_("code",[v._v("An API for JavaScript and Go")])]),v._v(" "),_("li",[_("code",[v._v("TypeScript and JSX syntax")])]),v._v(" "),_("li",[_("code",[v._v("Source maps")])]),v._v(" "),_("li",[_("code",[v._v("Minification")])]),v._v(" "),_("li",[_("code",[v._v("Plugins")])])]),v._v(" "),_("p",[v._v("现在很多工具都内置了它，比如我们熟知的:")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("vite")]),v._v(",")]),v._v(" "),_("li",[_("code",[v._v("snowpack")])])]),v._v(" "),_("p",[v._v("借助 esbuild 优异的性能， vite 更是如虎添翼， 快到飞起。")]),v._v(" "),_("p",[v._v("今天我们就来探索一下: 为什么 esbuild 这么快?")]),v._v(" "),_("p",[v._v("下文的主要内容：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("几组性能数据对比")])]),v._v(" "),_("li",[_("code",[v._v("为什么 esbuild 这么快")])]),v._v(" "),_("li",[_("code",[v._v("esbuild upcoming roadmap")])]),v._v(" "),_("li",[_("code",[v._v("esbuild 在 vite 中的运用")])]),v._v(" "),_("li",[_("code",[v._v("为什么生产环境仍需打包?")])]),v._v(" "),_("li",[_("code",[v._v("为何vite不用 esbuild 打包？")])]),v._v(" "),_("li",[_("code",[v._v("总结")])])]),v._v(" "),_("h1",{attrs:{id:"正文"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[v._v("#")]),v._v(" 正文")]),v._v(" "),_("p",[v._v("先看一组对比：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pTwqLfWKewCv0ozo69wA6CibHdgUDTUe6oS948cPTtnBm3wLY2K4bQxzzqrrel7tIQ0ZEk4ia06tewlMh9y4fM1Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),v._v(" "),_("p",[v._v("使用 10 份 threeJS 的生产包，对比不同打包工具在默认配置下的打包速度。")]),v._v(" "),_("p",[v._v("webpack5 垫底， 耗时 "),_("code",[v._v("55.25")]),v._v("秒。")]),v._v(" "),_("p",[v._v("esbuild 仅耗时 "),_("code",[v._v("0.37")]),v._v(" 秒。")]),v._v(" "),_("p",[v._v("差异巨大。")]),v._v(" "),_("p",[v._v("还有更多对比：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pTwqLfWKewCv0ozo69wA6CibHdgUDTUe6gWXCNCZlkP23gva8vsgwP18IUGpblWNh6NfJLeHmxlPXwFFImIZibAA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("https://twitter.com/evanwallace/status/1314121407903617025")]),v._v(" "),_("p",[v._v("webpack5 表示很受伤: 我还比不过 webpack 4 ?")]),v._v(" "),_("p",[v._v("...")]),v._v(" "),_("h2",{attrs:{id:"为什么-esbuild-这么快"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么-esbuild-这么快"}},[v._v("#")]),v._v(" 为什么 esbuild 这么快 ？")]),v._v(" "),_("p",[v._v("有以下几个原因。")]),v._v(" "),_("p",[v._v("(为了保证内容的准确性， 以下内容翻译自 esbuild 官网。)")]),v._v(" "),_("h3",{attrs:{id:"_1-它是用-go-语言编写的-并可以编译为本地代码。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-它是用-go-语言编写的-并可以编译为本地代码。"}},[v._v("#")]),v._v(" 1. 它是用 Go 语言编写的，并可以编译为本地代码。")]),v._v(" "),_("p",[v._v("大多数打包器都是用 JavaScript 编写的，但是对于 "),_("code",[v._v("JIT 编译")]),v._v("的语言来说，命令行应用程序拥有最差的性能表现。")]),v._v(" "),_("p",[v._v("每次运行打包器时，JavaScript VM 都会在没有任何优化提示的情况下看到打包程序的代码。")]),v._v(" "),_("p",[v._v("在 esbuild 忙于解析 JavaScript 时，node 忙于解析打包程序的JavaScript。")]),v._v(" "),_("p",[v._v("到节点完成解析打包程序代码的时间时，esbuild可能已经退出，您的打包程序甚至还没有开始打包。")]),v._v(" "),_("p",[v._v("另外，Go 是为"),_("code",[v._v("并行性")]),v._v("而设计的，而 JavaScript 不是。")]),v._v(" "),_("p",[v._v("Go在线程之间"),_("code",[v._v("共享内存")]),v._v("，而JavaScript必须在线程之间序列化数据。")]),v._v(" "),_("p",[v._v("Go 和 JavaScript都有"),_("code",[v._v("并行的垃圾收集器")]),v._v("，但是Go的堆在"),_("code",[v._v("所有线程")]),v._v("之间共享，而对于JavaScript, 每个JavaScript线程中都有一个"),_("code",[v._v("单独的堆")]),v._v("。")]),v._v(" "),_("p",[v._v("根据测试，这似乎将 JavaScript worker 线程的并行能力减少了一半，大概是因为一半CPU核心正忙于为另一半收集垃圾。")]),v._v(" "),_("h3",{attrs:{id:"_2-大量使用了并行操作。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-大量使用了并行操作。"}},[v._v("#")]),v._v(" 2. 大量使用了并行操作。")]),v._v(" "),_("p",[v._v("esbuild 中的"),_("code",[v._v("算法经过精心设计")]),v._v("，可以充分利用CPU资源。")]),v._v(" "),_("p",[v._v("大致分为三个阶段：")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("解析")])]),v._v(" "),_("li",[_("code",[v._v("链接")])]),v._v(" "),_("li",[_("code",[v._v("代码生成")])])]),v._v(" "),_("p",[_("code",[v._v("解析")]),v._v("和"),_("code",[v._v("代码生成")]),v._v("是大部分工作，并且可以"),_("code",[v._v("完全并行化")]),v._v("（链接在大多数情况下是固有的串行任务）。")]),v._v(" "),_("p",[v._v("由于所有线程"),_("code",[v._v("共享内存")]),v._v("，因此当捆绑导入同一JavaScript库的不同入口点时，可以轻松地共享工作。")]),v._v(" "),_("p",[v._v("大多数现代计算机具有"),_("code",[v._v("多内核")]),v._v("，因此并行性是一个巨大的胜利。")]),v._v(" "),_("h3",{attrs:{id:"_3-代码都是自己写的-没有使用第三方依赖。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码都是自己写的-没有使用第三方依赖。"}},[v._v("#")]),v._v(" 3. 代码都是自己写的， 没有使用第三方依赖。")]),v._v(" "),_("p",[v._v("自己编写所有内容, 而不是使用第三方库，可以带来很多性能优势。")]),v._v(" "),_("p",[v._v("可以从一开始就牢记性能，可以确保所有内容都使用一致的数据结构来避免昂贵的转换，并且可以在必要时进行广泛的体系结构更改。缺点当然是多了很多工作。")]),v._v(" "),_("p",[v._v("例如，许多捆绑程序都使用官方的TypeScript编译器作为解析器。")]),v._v(" "),_("p",[v._v("但是，它是为实现TypeScript编译器团队的目标而构建的，它们没有将性能作为头等大事。")]),v._v(" "),_("h3",{attrs:{id:"_4-内存的高效利用。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-内存的高效利用。"}},[v._v("#")]),v._v(" 4. 内存的高效利用。")]),v._v(" "),_("p",[v._v("理想情况下， 根据数据数据的长度， 编译器的复杂度为O(n).")]),v._v(" "),_("p",[v._v("如果要处理大量数据，内存访问速度可能会严重影响性能。")]),v._v(" "),_("p",[v._v("对数据进行的遍历次数越少（将数据转换成数据所需的不同表示形式也就越少），编译器就会越快。")]),v._v(" "),_("p",[v._v("例如，esbuild 仅触及整个JavaScript AST 3次：")]),v._v(" "),_("ol",[_("li",[v._v("进行词法分析，解析，作用域设置和声明符号的过程")]),v._v(" "),_("li",[v._v("绑定符号，最小化语法。比如：将 JSX / TS转换为 JS, ES Next 转换为 es5。")]),v._v(" "),_("li",[v._v("最小标识符，最小空格，生成代码。")])]),v._v(" "),_("p",[v._v("当 AST 数据在CPU缓存中仍然处于活跃状态时，会最大化AST数据的重用。")]),v._v(" "),_("p",[v._v("其他打包器在单独的过程中执行这些步骤，而不是将它们交织在一起。")]),v._v(" "),_("p",[v._v("它们也可以在数据表示之间进行转换，将多个库组织在一起(例如:字符串→TS→JS→字符串，然后字符串→JS→旧的JS→字符串，然后字符串→JS→minified JS→字符串)。")]),v._v(" "),_("p",[v._v("这样会占用更多内存，并且会减慢速度。")]),v._v(" "),_("p",[v._v("Go的另一个好处是它可以将内容紧凑地存储在内存中，从而使它可以使用更少的内存并在CPU缓存中容纳更多内容。")]),v._v(" "),_("p",[v._v("所有对象字段的类型和字段都紧密地包装在一起，例如几个布尔标志每个仅占用一个字节。")]),v._v(" "),_("p",[v._v("Go 还具有值语义，可以将一个对象直接嵌入到另一个对象中，因此它是'免费的'，无需另外分配。")]),v._v(" "),_("p",[v._v("JavaScript不具有这些功能，还具有其他缺点，例如 JIT 开销（例如隐藏的类插槽）和低效的表示形式（例如，非整数与指针堆分配）。")]),v._v(" "),_("p",[v._v("以上的每一条因素， 都能在一定程度上提高编译速度。")]),v._v(" "),_("p",[v._v("当它们共同工作时，效果比当今通常使用的其他打包器快几个数量级。")]),v._v(" "),_("p",[v._v("以上内容比较繁琐，对此，也有一些网友做了简要的总结:")]),v._v(" "),_("ul",[_("li",[v._v("它是用 "),_("code",[v._v("Go")]),v._v(" 语言编写的，该语言可以编译为本地代码。而且 Go 的执行速度很快。一般来说，JS 的操作是"),_("code",[v._v("毫秒级")]),v._v("，而 Go 则是"),_("code",[v._v("纳秒级")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("解析")]),v._v("，生成最终打包文件和生成 source maps 的操作全部完全并行化")]),v._v(" "),_("li",[_("code",[v._v("无需昂贵的数据转换")]),v._v("，只需很少的几步即可完成所有操作")]),v._v(" "),_("li",[v._v("该库"),_("code",[v._v("以提高编译速度为编写代码时的第一原则")]),v._v("，并尽量避免不必要的内存分配。")])]),v._v(" "),_("p",[v._v("仅作参考。")]),v._v(" "),_("h2",{attrs:{id:"upcoming-roadmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#upcoming-roadmap"}},[v._v("#")]),v._v(" Upcoming roadmap")]),v._v(" "),_("p",[v._v("以下这几个 feature 已经在进行中了, 而且是第一优先级：")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("Code splitting")]),v._v(" (#16, docs)")]),v._v(" "),_("li",[_("code",[v._v("CSS content type")]),v._v(" (#20, docs)")]),v._v(" "),_("li",[_("code",[v._v("Plugin API")]),v._v(" (#111)")])]),v._v(" "),_("p",[v._v("下面这几个 fearure 比较有潜力, 但是还不确定：")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("HTML content type")]),v._v(" (#31)")]),v._v(" "),_("li",[_("code",[v._v("Lowering to ES5")]),v._v(" (#297)")]),v._v(" "),_("li",[_("code",[v._v("Bundling top-level await")]),v._v(" (#253)")])]),v._v(" "),_("p",[v._v("感兴趣的可以保持关注。")]),v._v(" "),_("h2",{attrs:{id:"esbuild-在-vite-中的运用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#esbuild-在-vite-中的运用"}},[v._v("#")]),v._v(" esbuild 在 vite 中的运用")]),v._v(" "),_("p",[_("code",[v._v("vite")]),v._v(" 中大量使用了 "),_("code",[v._v("esbuild")]),v._v(", 这里简单分享两点。")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("optimizer")])])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pTwqLfWKewCv0ozo69wA6CibHdgUDTUe6iciciaa0hwcic637YbPPYggWCDxZjByz6vhToNbclTme5OiaLuOBpibQ31eQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("https://github.com/vitejs/vite/blob/main/packages/vite/src/node/optimizer/index.ts#L262")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("import { build, BuildOptions as EsbuildBuildOptions } from 'esbuild'\n\n// ...\nconst result = await build({\n    entryPoints: Object.keys(flatIdDeps),\n    bundle: true,\n    format: 'esm',\n    external: config.optimizeDeps?.exclude,\n    logLevel: 'error',\n    splitting: true,\n    sourcemap: true,\n    outdir: cacheDir,\n    treeShaking: 'ignore-annotations',\n    metafile: true,\n    define,\n    plugins: [\n      ...plugins,\n      esbuildDepPlugin(flatIdDeps, flatIdToExports, config)\n    ],\n    ...esbuildOptions\n  })\n\n  const meta = result.metafile!\n\n  // the paths in `meta.outputs` are relative to `process.cwd()`\n  const cacheDirOutputPath = path.relative(process.cwd(), cacheDir)\n\n  for (const id in deps) {\n    const entry = deps[id]\n    data.optimized[id] = {\n      file: normalizePath(path.resolve(cacheDir, flattenId(id) + '.js')),\n      src: entry,\n      needsInterop: needsInterop(\n        id,\n        idToExports[id],\n        meta.outputs,\n        cacheDirOutputPath\n      )\n    }\n  }\n\n  writeFile(dataPath, JSON.stringify(data, null, 2))\n")])])]),_("ol",[_("li",[v._v("处理 "),_("code",[v._v(".ts")]),v._v(" 文件")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pTwqLfWKewCv0ozo69wA6CibHdgUDTUe6nofONBRUwLv1ib9XBSgP6DJtriboxXrZzbOXFTedKJ6nhtrEB105DO9Q/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("https://github.com/vitejs/vite/commit/59035546db7ff4b7020242ba994a5395aac92802")]),v._v(" "),_("h2",{attrs:{id:"为什么生产环境仍需打包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么生产环境仍需打包"}},[v._v("#")]),v._v(" "),_("code",[v._v("为什么生产环境仍需打包?")])]),v._v(" "),_("p",[v._v("尽管原生 "),_("code",[v._v("ESM")]),v._v(" 现在得到了"),_("code",[v._v("广泛支持")]),v._v("，但由于嵌套导入会导致"),_("code",[v._v("额外的网络往返")]),v._v("，在生产环境中发布未打包的 ESM 仍然效率低下（即使使用 "),_("code",[v._v("HTTP/2")]),v._v("）。")]),v._v(" "),_("p",[v._v("为了在生产环境中获得"),_("code",[v._v("最佳的加载性能")]),v._v("，最好还是将代码进行 "),_("code",[v._v("tree-shaking")]),v._v("、"),_("code",[v._v("懒加载")]),v._v("和 "),_("code",[v._v("chunk 分割")]),v._v("（以获得更好的"),_("code",[v._v("缓存")]),v._v("）。")]),v._v(" "),_("p",[v._v("要确保"),_("code",[v._v("开发")]),v._v("服务器和"),_("code",[v._v("产品构建")]),v._v("之间的"),_("code",[v._v("最佳输出")]),v._v("和"),_("code",[v._v("行为")]),v._v("达到一致，并不容易。")]),v._v(" "),_("p",[v._v("为解决这个问题，Vite 附带了一套 "),_("code",[v._v("构建优化")]),v._v(" 的 "),_("code",[v._v("构建命令")]),v._v("，开箱即用。")]),v._v(" "),_("h2",{attrs:{id:"为何-vite-不用-esbuild-打包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为何-vite-不用-esbuild-打包"}},[v._v("#")]),v._v(" "),_("code",[v._v("为何 vite 不用 esbuild 打包？")])]),v._v(" "),_("p",[v._v("虽然 "),_("code",[v._v("esbuild")]),v._v(" 快得惊人，并且已经是一个在构建库方面比较出色的工具，但一些针对构建应用的重要功能仍然还在持续开发中 —— 特别是"),_("code",[v._v("代码分割")]),v._v("和 "),_("code",[v._v("CSS处理")]),v._v("方面。")]),v._v(" "),_("p",[v._v("就目前来说，"),_("code",[v._v("Rollup")]),v._v(" 在应用打包方面, 更加成熟和灵活。")]),v._v(" "),_("p",[v._v("尽管如此，当未来这些功能稳定后，也不排除使用 esbuild 作为"),_("code",[v._v("生产构建器")]),v._v("的可能。")]),v._v(" "),_("h1",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("esbuild 为构建提效带来了曙光， 而且 esm 的数量也在快速增加：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pTwqLfWKewCv0ozo69wA6CibHdgUDTUe6kXJhebo42byTQ5icOUph6BIzYWF7sXyibqumjfLMX9Lw2PxKicx9NamMQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("https://twitter.com/skypackjs/status/1113838647487287296")]),v._v(" "),_("p",[v._v("希望 "),_("code",[v._v("esm")]),v._v(" 生态尽快完善起来, 造福前端")])])}),[],!1,null,null,null);_.default=i.exports}}]);